buildscript {
    ext {
        groupId = "io.github.syaku"
        versionName = "1.0.0-SNAPSHOT"
        junitVersion = "5.7.1"
        kotlinVersion = "1.5.10"
        kotestVersion = "4.6.0"
    }

    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }

    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "io.kotest:kotest-gradle-plugin:0.3.8"
    }
}

wrapper {
    gradleVersion = "7.2"
}

apply plugin: "kotlin"
apply plugin: "org.sonarqube"
apply plugin: "jacoco"
apply plugin: "io.kotest"

repositories {
    mavenCentral()
}

group groupId
version versionName

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = JavaVersion.VERSION_11.toString()
    }
}

compileJava.options.encoding = 'UTF-8'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-test:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-test-junit5:${kotlinVersion}"

    implementation "org.slf4j:slf4j-api:1.7.32"
    implementation "ch.qos.logback:logback-classic:1.2.7"
    implementation "ch.qos.logback:logback-core:1.2.7"

    testImplementation "io.kotest:kotest-runner-junit5-jvm:${kotestVersion}"
    testImplementation "io.kotest:kotest-assertions-core-jvm:${kotestVersion}"
    testImplementation "io.kotest:kotest-property-jvm:${kotestVersion}"
    testImplementation 'io.github.microutils:kotlin-logging-jvm:2.0.10'
}

sonarqube {
    properties {
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.organization", "syakuis-github"
        property "sonar.projectKey", "syakuis-github"
        property "sonar.projectName", "spring-gradle-template"
        property "sonar.language", "java"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.sources", "src/main/java"
        property "sonar.exclusions", "**/*Test*.*, **/Q*.java"
        property "sonar.test.inclusions", "**/*Test.java"
        property "sonar.coverage.exclusions", "**/*Test*.*, **/Q*.java"
        property "sonar.java.junit.reportPaths", "${buildDir}/test-results"
        property "sonar.jacoco.reportPaths", "${buildDir}/jacoco/jacoco.exec"
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jar {
    enabled true
}
